El m√≥dulo control_unit implementa la unidad de control del procesador mediante una m√°quina de estados finitos (FSM). Su funci√≥n principal es interpretar la instrucci√≥n actual (desde el registro IR) y generar las se√±ales de control necesarias para coordinar los registros, buses, memoria y ALU.

üéØ Funcionalidad Clave:
Ciclo de Instrucci√≥n dividido en fases: Fetch, Decode y Execute.

Decodificaci√≥n de instrucciones basada en el valor de IR.

Generaci√≥n de se√±ales de control: como A_Load, B_Load, IR_Load, MAR_Load, PC_Inc, PC_Load, Bus1_Sel, Bus2_Sel, ALU_Sel, CCR_Load, y wr.

üîÅ Estados Implementados:
Ciclo Fetch: Fetch0, Fetch1, Fetch2 ‚Äî para obtener la instrucci√≥n desde memoria.

Decodificaci√≥n: DS (Decode State).

Ejemplo de instrucciones soportadas:

LOAD_INM_A, LOAD_DIR_A, STORE_B, ADD_AB, SUB_AB, XOR_AB, JMP, JZ, JC, entre otras.

Saltos Condicionales: Evaluaci√≥n de banderas N, Z, O, C (desde CCR_Result) para tomar decisiones de salto.

‚öôÔ∏è Integraci√≥n:
Este m√≥dulo se sincroniza con clk y responde a rst. Se conecta directamente al data_path y decide el comportamiento en cada ciclo de reloj.

üß† Detalles adicionales:
La unidad est√° altamente modularizada, con estados expl√≠citos para cada fase de cada instrucci√≥n, facilitando la depuraci√≥n y ampliaci√≥n del conjunto de instrucciones.
